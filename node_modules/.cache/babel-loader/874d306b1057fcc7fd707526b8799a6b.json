{"ast":null,"code":"var _jsxFileName = \"/Users/robinjack/Documents/Repositories/react-nanodegree/reactnd-would-you-rather/src/components/Question.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport authedUser from \"../reducers/authedUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Question extends Component {\n  render() {\n    console.log(\"Questions props: \", this.props);\n    const {\n      user,\n      question\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'question',\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: 'avatar',\n        src: user.avatarURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          'fontWeight': this.props.authedUser === user.id ? 'bold' : 'normal'\n        },\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'question-icons',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'btn',\n          children: [\" \", question.optionOne.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'btn',\n          children: [\" \", question.optionTwo.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  users,\n  questions,\n  authedUser\n}, {\n  questionId\n}) => {\n  return {\n    question: questions[questionId],\n    user: users[questions[questionId].author],\n    ...authedUser\n  };\n};\n\nexport default connect(mapStateToProps)(Question);","map":{"version":3,"sources":["/Users/robinjack/Documents/Repositories/react-nanodegree/reactnd-would-you-rather/src/components/Question.js"],"names":["React","Component","connect","authedUser","Question","render","console","log","props","user","question","avatarURL","id","name","optionOne","text","optionTwo","mapStateToProps","users","questions","questionId","author"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;;AAIA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAE7BI,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKC,KAAtC;AACA,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAmB,KAAKF,KAA9B;AACA,wBAAQ;AAAK,MAAA,SAAS,EAAE,UAAhB;AAAA,8BACJ;AAAK,QAAA,SAAS,EAAE,QAAhB;AAA0B,QAAA,GAAG,EAAEC,IAAI,CAACE;AAApC;AAAA;AAAA;AAAA;AAAA,cADI,eAEJ;AAAG,QAAA,KAAK,EAAE;AAAC,wBAAe,KAAKH,KAAL,CAAWL,UAAX,KAA0BM,IAAI,CAACG,EAA/B,GAAoC,MAApC,GAA6C;AAA7D,SAAV;AAAA,kBAAmFH,IAAI,CAACI;AAAxF;AAAA;AAAA;AAAA;AAAA,cAFI,eAGJ;AAAK,QAAA,SAAS,EAAE,gBAAhB;AAAA,gCACA;AAAK,UAAA,SAAS,EAAE,KAAhB;AAAA,0BAAyBH,QAAQ,CAACI,SAAT,CAAmBC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAK,UAAA,SAAS,EAAE,KAAhB;AAAA,0BAAyBL,QAAQ,CAACM,SAAT,CAAmBD,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHI;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAQH;;AAb4B;;AAiBjC,MAAME,eAAe,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,SAAR;AAAmBhB,EAAAA;AAAnB,CAAD,EAAiC;AAACiB,EAAAA;AAAD,CAAjC,KAAkD;AACtE,SAAO;AACHV,IAAAA,QAAQ,EAAES,SAAS,CAACC,UAAD,CADhB;AAEHX,IAAAA,IAAI,EAAES,KAAK,CAACC,SAAS,CAACC,UAAD,CAAT,CAAsBC,MAAvB,CAFR;AAGH,OAAGlB;AAHA,GAAP;AAKH,CAND;;AAQA,eAAeD,OAAO,CAACe,eAAD,CAAP,CAAyBb,QAAzB,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport authedUser from \"../reducers/authedUser\";\n\n\n\nclass Question extends Component {\n\n    render() {\n        console.log(\"Questions props: \", this.props)\n        const {user, question} = this.props\n        return (<div className={'question'}>\n            <img className={'avatar'} src={user.avatarURL}/>\n            <p style={{'fontWeight' : this.props.authedUser === user.id ? 'bold' : 'normal'}}>{user.name}</p>\n            <div className={'question-icons'}>\n            <div className={'btn'}> {question.optionOne.text}</div>\n            <div className={'btn'}> {question.optionTwo.text}</div>\n            </div>\n        </div>)\n    }\n\n}\n\nconst mapStateToProps = ({users, questions, authedUser}, {questionId}) => {\n    return {\n        question: questions[questionId],\n        user: users[questions[questionId].author],\n        ...authedUser\n    }\n}\n\nexport default connect(mapStateToProps)(Question)"]},"metadata":{},"sourceType":"module"}