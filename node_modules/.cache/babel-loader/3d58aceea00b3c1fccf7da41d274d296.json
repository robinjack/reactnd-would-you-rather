{"ast":null,"code":"import { RECEIVE_USERS } from \"../actions/users\";\nimport { ADD_ANSWER } from \"../actions/answers\";\nimport { ADD_QUESTION } from \"../actions/questions\";\nexport default function users(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_USERS:\n      return { ...state,\n        ...action.users\n      };\n\n    case ADD_QUESTION:\n      {\n        const {\n          authedUser\n        } = action.author;\n        const {\n          users\n        } = state.users;\n        const {\n          formattedQuestion\n        } = action.formattedQuestion;\n        return { ...users,\n          [authedUser]: { ...users[authedUser],\n            questions: users[authedUser].questions.concat([formattedQuestion.id])\n          }\n        };\n      }\n\n    case ADD_ANSWER:\n      {\n        const {\n          users\n        } = state.users;\n        const {\n          authedUser,\n          qid,\n          answer\n        } = action;\n        return { ...users,\n          [authedUser]: { ...users[authedUser],\n            answers: { ...users[authedUser].answers,\n              [qid]: answer\n            }\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/robinjack/Documents/Repositories/react-nanodegree/reactnd-would-you-rather/src/reducers/users.js"],"names":["RECEIVE_USERS","ADD_ANSWER","ADD_QUESTION","users","state","action","type","authedUser","author","formattedQuestion","questions","concat","id","qid","answer","answers"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,kBAA5B;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,SAAQC,YAAR,QAA2B,sBAA3B;AAEA,eAAe,SAASC,KAAT,CAAgBC,KAAK,GAAG,EAAxB,EAA4BC,MAA5B,EAAoC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,aAAL;AACI,aAAO,EACP,GAAGI,KADI;AAEH,WAAGC,MAAM,CAACF;AAFP,OAAP;;AAGJ,SAAKD,YAAL;AAAmB;AACf,cAAM;AAACK,UAAAA;AAAD,YAAeF,MAAM,CAACG,MAA5B;AACA,cAAM;AAACL,UAAAA;AAAD,YAAUC,KAAK,CAACD,KAAtB;AACA,cAAM;AAACM,UAAAA;AAAD,YAAsBJ,MAAM,CAACI,iBAAnC;AAEA,eAAO,EACH,GAAGN,KADA;AAEH,WAACI,UAAD,GAAc,EACV,GAAGJ,KAAK,CAACI,UAAD,CADE;AAEVG,YAAAA,SAAS,EAAEP,KAAK,CAACI,UAAD,CAAL,CAAkBG,SAAlB,CAA4BC,MAA5B,CAAmC,CAACF,iBAAiB,CAACG,EAAnB,CAAnC;AAFD;AAFX,SAAP;AAOH;;AAED,SAAKX,UAAL;AACA;AAAC,cAAM;AAACE,UAAAA;AAAD,YAAUC,KAAK,CAACD,KAAtB;AACA,cAAM;AAACI,UAAAA,UAAD;AAAaM,UAAAA,GAAb;AAAkBC,UAAAA;AAAlB,YAA4BT,MAAlC;AACG,eAAO,EACX,GAAGF,KADQ;AAEH,WAACI,UAAD,GAAc,EAClB,GAAGJ,KAAK,CAACI,UAAD,CADU;AAEVQ,YAAAA,OAAO,EAAE,EACb,GAAGZ,KAAK,CAACI,UAAD,CAAL,CAAkBQ,OADR;AAEL,eAACF,GAAD,GAAOC;AAFF;AAFC;AAFX,SAAP;AAUH;;AAGD;AAAU,aAAOV,KAAP;AAnCd;AAsCH","sourcesContent":["import {RECEIVE_USERS} from \"../actions/users\";\nimport {ADD_ANSWER} from \"../actions/answers\";\nimport {ADD_QUESTION} from \"../actions/questions\";\n\nexport default function users (state = {}, action) {\n    switch (action.type) {\n        case RECEIVE_USERS :\n            return {\n            ...state,\n                ...action.users}\n        case ADD_QUESTION: {\n            const {authedUser} = action.author\n            const {users} = state.users\n            const {formattedQuestion} = action.formattedQuestion\n\n            return {\n                ...users,\n                [authedUser]: {\n                    ...users[authedUser],\n                    questions: users[authedUser].questions.concat([formattedQuestion.id])\n                }\n            }\n        }\n\n        case ADD_ANSWER:\n        {const {users} = state.users\n         const {authedUser, qid, answer} = action\n            return {\n        ...users,\n                [authedUser]: {\n            ...users[authedUser],\n                    answers: {\n                ...users[authedUser].answers,\n                        [qid]: answer\n                }\n            }\n        }\n        }\n\n\n        default : return state\n    }\n\n}"]},"metadata":{},"sourceType":"module"}