{"ast":null,"code":"var _jsxFileName = \"/Users/robinjack/Documents/Repositories/react-nanodegree/reactnd-would-you-rather/src/components/QuestionPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuestionPage extends Component {\n  render() {\n    console.log(\"Params: \", this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Would you rather?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"box\", {\n        children: /*#__PURE__*/_jsxDEV(Question, {\n          questionId: this.props.questionId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  users,\n  questions,\n  authedUser\n}, {\n  questionId\n}) => {\n  return {\n    question: questions[questionId],\n    user: users,\n    questionId\n  };\n};\n\nexport default connect(mapStateToProps)(QuestionPage);","map":{"version":3,"sources":["/Users/robinjack/Documents/Repositories/react-nanodegree/reactnd-would-you-rather/src/components/QuestionPage.js"],"names":["React","Component","connect","Question","QuestionPage","render","console","log","props","questionId","mapStateToProps","users","questions","authedUser","question","user"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAGA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAIjCI,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKC,KAA7B;AACA,wBAAQ;AAAA,8BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,eAEJ;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,UAAU,EAAE,KAAKA,KAAL,CAAWC;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFI;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAgBH;;AAtBgC;;AA2BrC,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA;AAAnB,CAAD,EAAiC;AAACJ,EAAAA;AAAD,CAAjC,KAAkD;AACtE,SAAO;AACHK,IAAAA,QAAQ,EAAEF,SAAS,CAACH,UAAD,CADhB;AAEHM,IAAAA,IAAI,EAAGJ,KAFJ;AAGHF,IAAAA;AAHG,GAAP;AAKH,CAND;;AASA,eAAeP,OAAO,CAACQ,eAAD,CAAP,CAAyBN,YAAzB,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport Question from \"./Question\";\n\n\nclass QuestionPage extends Component {\n\n\n\n    render() {\n        console.log(\"Params: \", this.props)\n        return (<div>\n            <h3>Would you rather?</h3>\n            <box>\n                <Question questionId={this.props.questionId}/>\n            </box>\n\n            {/*\n            1. Text of option, number of people who voted\n            , percentage of people who voted for that option\n            2. Text should be clearly marked if the user voted for that option\n            3.\n\n            */}\n\n\n        </div>)\n    }\n\n}\n\n\nconst mapStateToProps = ({users, questions, authedUser}, {questionId}) => {\n    return {\n        question: questions[questionId],\n        user : users,\n        questionId\n    }\n}\n\n\nexport default connect(mapStateToProps)(QuestionPage)\n\n"]},"metadata":{},"sourceType":"module"}