{"ast":null,"code":"var _jsxFileName = \"/Users/robinjack/Documents/Repositories/react-nanodegree/reactnd-would-you-rather/src/components/Leaderboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Leaderboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.questionScore = question => {\n      return question.optionOne.votes.length + question.optionTwo.votes.length;\n    };\n  }\n\n  render() {\n    const {\n      questions\n    } = this.props;\n    let sortedQuestions = questions.values().sort((a, b) => {\n      return this.questionScore(b) - this.questionScore(a);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(sortedQuestions).map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Question, {\n            questionId: question.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 66\n          }, this)\n        }, question.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 44\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  questions\n}) => {\n  return {\n    questions\n  };\n};\n\nexport default connect()(Leaderboard);","map":{"version":3,"sources":["/Users/robinjack/Documents/Repositories/react-nanodegree/reactnd-would-you-rather/src/components/Leaderboard.js"],"names":["React","Component","connect","Question","Leaderboard","questionScore","question","optionOne","votes","length","optionTwo","render","questions","props","sortedQuestions","values","sort","a","b","Object","keys","map","id","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAIA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAEhCI,aAFgC,GAEhBC,QAAQ,IAAI;AACxB,aAAOA,QAAQ,CAACC,SAAT,CAAmBC,KAAnB,CAAyBC,MAAzB,GAAkCH,QAAQ,CAACI,SAAT,CAAmBF,KAAnB,CAAyBC,MAAlE;AACH,KAJ+B;AAAA;;AAMhCE,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACC,MAAAA;AAAD,QAAc,KAAKC,KAAzB;AAEA,QAAIC,eAAe,GAAGF,SAAS,CAACG,MAAV,GAAmBC,IAAnB,CAClB,CAACC,CAAD,EAAGC,CAAH,KAAS;AAAC,aAAO,KAAKb,aAAL,CAAmBa,CAAnB,IAAwB,KAAKb,aAAL,CAAmBY,CAAnB,CAA/B;AAAqD,KAD7C,CAAtB;AAIA,wBACI;AAAA,6BACI;AAAA,kBAEQE,MAAM,CAACC,IAAP,CAAYN,eAAZ,EAA6BO,GAA7B,CACKf,QAAD,iBAAe;AAAA,iCAAsB,QAAC,QAAD;AAAU,YAAA,UAAU,EAAEA,QAAQ,CAACgB;AAA/B;AAAA;AAAA;AAAA;AAAA;AAAtB,WAAShB,QAAQ,CAACgB,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADnB;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AA5B+B;;AAgCpC,MAAMC,eAAe,GAAG,CAAC;AAACX,EAAAA;AAAD,CAAD,KAAiB;AACrC,SAAO;AACHA,IAAAA;AADG,GAAP;AAGH,CAJD;;AAQA,eAAeV,OAAO,GAAGE,WAAH,CAAtB","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport Question from \"./Question\";\n\n\n\nclass Leaderboard extends Component {\n\n    questionScore = question => {\n        return question.optionOne.votes.length + question.optionTwo.votes.length\n    }\n\n    render() {\n\n        const {questions} = this.props\n\n        let sortedQuestions = questions.values().sort(\n            (a,b) => {return this.questionScore(b) - this.questionScore(a)}\n        )\n\n        return (\n            <div>\n                <ul>\n                    {\n                        Object.keys(sortedQuestions).map(\n                            (question) => (<li key={question.id}><Question questionId={question.id}/></li>)\n                        )\n                    }\n                </ul>\n\n\n            </div>\n\n        )\n    }\n\n}\n\nconst mapStateToProps = ({questions}) => {\n    return {\n        questions\n    }\n}\n\n\n\nexport default connect()(Leaderboard)"]},"metadata":{},"sourceType":"module"}