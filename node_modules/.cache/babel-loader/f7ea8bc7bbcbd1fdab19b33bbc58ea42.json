{"ast":null,"code":"import { RECEIVE_QUESTIONS, ADD_QUESTION } from \"../actions/questions\";\nimport { ADD_ANSWER } from \"../actions/answers\";\nexport default function questions(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return { ...state,\n        ...action.questions\n      };\n\n    case ADD_QUESTION:\n      {\n        return { ...state,\n          [action.formattedQuestion.id]: action.formattedQuestion\n        };\n      }\n\n    case ADD_ANSWER:\n      {\n        const {\n          question\n        } = state.questions;\n        const {\n          qid\n        } = action.questionId;\n        const {\n          answer\n        } = action.id;\n        const {\n          authedUser\n        } = action.author;\n        return { ...questions,\n          [qid]: { ...questions[qid],\n            [answer]: { ...questions[qid][answer],\n              votes: questions[qid][answer].votes.concat([authedUser])\n            }\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/robinjack/Documents/Repositories/react-nanodegree/reactnd-would-you-rather/src/reducers/questions.js"],"names":["RECEIVE_QUESTIONS","ADD_QUESTION","ADD_ANSWER","questions","state","action","type","formattedQuestion","id","question","qid","questionId","answer","authedUser","author","votes","concat"],"mappings":"AAAA,SAAQA,iBAAR,EAA2BC,YAA3B,QAA8C,sBAA9C;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AAEA,eAAe,SAASC,SAAT,CAAoBC,KAAK,GAAG,EAA5B,EAAgCC,MAAhC,EAAwC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,iBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEH,WAAGC,MAAM,CAACF;AAFP,OAAP;;AAIJ,SAAKF,YAAL;AAAmB;AACf,eAAO,EACH,GAAGG,KADA;AAEH,WAACC,MAAM,CAACE,iBAAP,CAAyBC,EAA1B,GAAgCH,MAAM,CAACE;AAFpC,SAAP;AAMH;;AACD,SAAKL,UAAL;AACI;AAAG,cAAM;AAACO,UAAAA;AAAD,YAAaL,KAAK,CAACD,SAAzB;AACC,cAAM;AAACO,UAAAA;AAAD,YAAQL,MAAM,CAACM,UAArB;AACA,cAAM;AAACC,UAAAA;AAAD,YAAWP,MAAM,CAACG,EAAxB;AACA,cAAM;AAACK,UAAAA;AAAD,YAAeR,MAAM,CAACS,MAA5B;AACA,eAAO,EACH,GAAGX,SADA;AAEH,WAACO,GAAD,GAAO,EACH,GAAGP,SAAS,CAACO,GAAD,CADT;AAEH,aAACE,MAAD,GAAU,EACN,GAAGT,SAAS,CAACO,GAAD,CAAT,CAAeE,MAAf,CADG;AAENG,cAAAA,KAAK,EAAEZ,SAAS,CAACO,GAAD,CAAT,CAAeE,MAAf,EAAuBG,KAAvB,CAA6BC,MAA7B,CAAoC,CAACH,UAAD,CAApC;AAFD;AAFP;AAFJ,SAAP;AAWH;;AAEL;AAAU,aAAOT,KAAP;AAhCd;AAmCH","sourcesContent":["import {RECEIVE_QUESTIONS, ADD_QUESTION} from \"../actions/questions\";\nimport {ADD_ANSWER} from \"../actions/answers\";\n\nexport default function questions (state = {}, action) {\n    switch (action.type) {\n        case RECEIVE_QUESTIONS:\n            return {\n                ...state,\n                ...action.questions\n            }\n        case ADD_QUESTION: {\n            return {\n                ...state,\n                [action.formattedQuestion.id] : action.formattedQuestion\n\n            }\n\n        }\n        case ADD_ANSWER:\n            {  const {question} = state.questions\n                const {qid} = action.questionId\n                const {answer} = action.id\n                const {authedUser} = action.author\n                return {\n                    ...questions,\n                    [qid]: {\n                        ...questions[qid],\n                        [answer]: {\n                            ...questions[qid][answer],\n                            votes: questions[qid][answer].votes.concat([authedUser])\n                        }\n                    }\n                }\n\n            }\n\n        default : return state\n    }\n\n}"]},"metadata":{},"sourceType":"module"}