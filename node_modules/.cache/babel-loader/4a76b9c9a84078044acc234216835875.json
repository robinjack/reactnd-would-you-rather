{"ast":null,"code":"var _jsxFileName = \"/Users/robinjack/Documents/Repositories/react-nanodegree/reactnd-would-you-rather/src/components/Home.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Navigation from './Navigation';\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      answered: false\n    };\n\n    this.toggleAnswered = () => {\n      this.setState(prevState => ({\n        answered: !prevState.answered\n      }));\n    };\n  }\n\n  render() {\n    const {\n      authedUser,\n      questions\n    } = this.props;\n    console.log(\"ALL QUESTIONS: \", questions);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'questionBtnContainer',\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: 'questionCategoryBtn',\n          style: {\n            'fontWeight': this.state.answered ? 'bold' : 'normal'\n          },\n          disabled: !this.state.answered,\n          onClick: this.toggleAnswered,\n          children: \"Unanswered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: 'questionCategoryBtn',\n          style: {\n            'fontWeight': !this.state.answered ? 'bold' : 'normal'\n          },\n          disabled: this.state.answered,\n          onClick: this.toggleAnswered,\n          children: \" Answered \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.values(questions).filter(question => {\n          console.log(\"Question: \", question);\n          let authedUserAnswered = question.optionOne.votes.concat(question.optionTwo.votes).includes(authedUser);\n          return this.state.answered ? authedUserAnswered : !authedUserAnswered;\n        }).sort((a, b) => b.timestamp - a.timestamp).map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Question, {\n            questionId: question[\"id\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 62\n          }, this)\n        }, question.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  questions,\n  authedUser\n}) => {\n  console.log(\"ALL QUESTIONS IN MAPSTATETOPROPS: \", questions);\n  return { ...authedUser,\n    questions: questions\n  };\n};\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["/Users/robinjack/Documents/Repositories/react-nanodegree/reactnd-would-you-rather/src/components/Home.js"],"names":["React","Component","connect","Navigation","Question","Home","state","answered","toggleAnswered","setState","prevState","render","authedUser","questions","props","console","log","Object","values","filter","question","authedUserAnswered","optionOne","votes","concat","optionTwo","includes","sort","a","b","timestamp","map","id","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAIA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAEzBK,KAFyB,GAEjB;AACJC,MAAAA,QAAQ,EAAG;AADP,KAFiB;;AAAA,SAMzBC,cANyB,GAMR,MAAM;AACnB,WAAKC,QAAL,CAAgBC,SAAD,KAAe;AAACH,QAAAA,QAAQ,EAAG,CAACG,SAAS,CAACH;AAAvB,OAAf,CAAf;AACH,KARwB;AAAA;;AAUzBI,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,UAAD;AAAaC,MAAAA;AAAb,QAA0B,KAAKC,KAArC;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,SAA/B;AACA,wBACI;AAAA,8BACA;AAAK,QAAA,SAAS,EAAE,sBAAhB;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAE,qBAAnB;AACI,UAAA,KAAK,EAAE;AAAC,0BAAe,KAAKP,KAAL,CAAWC,QAAX,GACX,MADW,GACF;AADd,WADX;AAII,UAAA,QAAQ,EAAE,CAAC,KAAKD,KAAL,CAAWC,QAJ1B;AAKI,UAAA,OAAO,EAAE,KAAKC,cALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AAAQ,UAAA,SAAS,EAAE,qBAAnB;AACI,UAAA,KAAK,EAAE;AAAC,0BAAe,CAAC,KAAKF,KAAL,CAAWC,QAAZ,GACnB,MADmB,GACV;AADN,WADX;AAIG,UAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAJxB;AAKA,UAAA,OAAO,EAAE,KAAKC,cALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAmBI;AAAA,kBAGIS,MAAM,CAACC,MAAP,CAAcL,SAAd,EAAyBM,MAAzB,CACKC,QAAD,IAAc;AACVL,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BI,QAA1B;AACA,cAAIC,kBAAkB,GAAGD,QAAQ,CAACE,SAAT,CAAmBC,KAAnB,CAAyBC,MAAzB,CAAgCJ,QAAQ,CAACK,SAAT,CAAmBF,KAAnD,EAA0DG,QAA1D,CAAmEd,UAAnE,CAAzB;AACA,iBAAO,KAAKN,KAAL,CAAWC,QAAX,GAAsBc,kBAAtB,GAA2C,CAACA,kBAAnD;AACH,SALL,EAKOM,IALP,CAKY,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACC,SAAF,GAAcF,CAAC,CAACE,SALrC,EAKgDC,GALhD,CAMKX,QAAD,iBAAe;AAAA,iCAAsB,QAAC,QAAD;AAAU,YAAA,UAAU,EAAEA,QAAQ,CAAC,IAAD;AAA9B;AAAA;AAAA;AAAA;AAAA;AAAtB,WAASA,QAAQ,CAACY,EAAlB;AAAA;AAAA;AAAA;AAAA,gBANnB;AAHJ;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmCH;;AAjDwB;;AAqD7B,MAAMC,eAAe,GAAG,CAAC;AAACpB,EAAAA,SAAD;AAAYD,EAAAA;AAAZ,CAAD,KAA6B;AACjDG,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDH,SAAlD;AACA,SAAO,EACH,GAAGD,UADA;AAEHC,IAAAA,SAAS,EAAEA;AAFR,GAAP;AAIH,CAND;;AASA,eAAeX,OAAO,CAAC+B,eAAD,CAAP,CAAyB5B,IAAzB,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport Navigation from './Navigation'\nimport Question from \"./Question\";\n\n\n\nclass Home extends Component {\n\n    state = {\n        answered : false\n    }\n\n    toggleAnswered = () => {\n        this.setState( (prevState) =>({answered : !prevState.answered}))\n    }\n\n    render() {\n        const {authedUser, questions} = this.props\n\n        console.log(\"ALL QUESTIONS: \", questions)\n        return (\n            <div>\n            <div className={'questionBtnContainer'}>\n                <button className={'questionCategoryBtn'}\n                    style={{'fontWeight' : this.state.answered ?\n                                'bold' : 'normal'\n                    }}\n                    disabled={!this.state.answered}\n                    onClick={this.toggleAnswered}\n                >Unanswered</button>\n                <button className={'questionCategoryBtn'}\n                    style={{'fontWeight' : !this.state.answered ?\n                        'bold' : 'normal'\n\n                }} disabled={this.state.answered}\n                onClick={this.toggleAnswered}\n                > Answered </button>\n\n\n            </div>\n                <ul>\n                {\n\n                    Object.values(questions).filter(\n                        (question) => {\n                            console.log(\"Question: \", question)\n                            let authedUserAnswered = question.optionOne.votes.concat(question.optionTwo.votes).includes(authedUser)\n                            return this.state.answered ? authedUserAnswered : !authedUserAnswered\n                        }).sort((a,b) => b.timestamp - a.timestamp).map(\n                        (question) => (<li key={question.id}><Question questionId={question[\"id\"]}/></li>)\n                    )\n                }\n                </ul>\n\n            </div>)\n    }\n\n}\n\nconst mapStateToProps = ({questions, authedUser}) => {\n    console.log(\"ALL QUESTIONS IN MAPSTATETOPROPS: \", questions)\n    return {\n        ...authedUser,\n        questions: questions\n    }\n}\n\n\nexport default connect(mapStateToProps)(Home)"]},"metadata":{},"sourceType":"module"}