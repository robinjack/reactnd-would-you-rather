{"ast":null,"code":"var _jsxFileName = \"/Users/robinjack/Documents/Repositories/react-nanodegree/reactnd-would-you-rather/src/components/Leaderboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Question from \"./Question\";\nimport { questionScore } from '../utilities/questionUtilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Leaderboard extends Component {\n  render() {\n    const {\n      questions\n    } = this.props;\n    console.log(\"Properties: \", this.props);\n    console.log(questions);\n    let sortedQuestions = Object.values(questions).sort((a, b) => {\n      return questionScore(b) - questionScore(a);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sortedQuestions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Question, {\n            questionId: question.id,\n            score: questionScore(question)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 66\n          }, this)\n        }, question.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 44\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  questions,\n  users\n}) => {\n  return {\n    questions,\n    users\n  };\n};\n\nexport default connect(mapStateToProps)(Leaderboard);","map":{"version":3,"sources":["/Users/robinjack/Documents/Repositories/react-nanodegree/reactnd-would-you-rather/src/components/Leaderboard.js"],"names":["React","Component","connect","Question","questionScore","Leaderboard","render","questions","props","console","log","sortedQuestions","Object","values","sort","a","b","map","question","id","mapStateToProps","users"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,aAAR,QAA4B,gCAA5B;;;AAGA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAIhCK,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACC,MAAAA;AAAD,QAAc,KAAKC,KAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKF,KAAjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEA,QAAII,eAAe,GAAGC,MAAM,CAACC,MAAP,CAAcN,SAAd,EAAyBO,IAAzB,CAClB,CAACC,CAAD,EAAGC,CAAH,KAAS;AAAC,aAAOZ,aAAa,CAACY,CAAD,CAAb,GAAmBZ,aAAa,CAACW,CAAD,CAAvC;AAA2C,KADnC,CAAtB;AAIA,wBACI;AAAA,6BACI;AAAA,kBAEQJ,eAAe,CAACM,GAAhB,CACKC,QAAD,iBAAe;AAAA,iCAAsB,QAAC,QAAD;AAAU,YAAA,UAAU,EAAEA,QAAQ,CAACC,EAA/B;AAAmC,YAAA,KAAK,EAAEf,aAAa,CAACc,QAAD;AAAvD;AAAA;AAAA;AAAA;AAAA;AAAtB,WAASA,QAAQ,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADnB;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AA5B+B;;AAgCpC,MAAMC,eAAe,GAAG,CAAC;AAACb,EAAAA,SAAD;AAAYc,EAAAA;AAAZ,CAAD,KAAwB;AAC5C,SAAO;AACHd,IAAAA,SADG;AAEHc,IAAAA;AAFG,GAAP;AAIH,CALD;;AASA,eAAenB,OAAO,CAACkB,eAAD,CAAP,CAAyBf,WAAzB,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport Question from \"./Question\";\nimport {questionScore} from '../utilities/questionUtilities'\n\n\nclass Leaderboard extends Component {\n\n\n\n    render() {\n\n        const {questions} = this.props\n        console.log(\"Properties: \", this.props)\n        console.log(questions)\n\n        let sortedQuestions = Object.values(questions).sort(\n            (a,b) => {return questionScore(b) - questionScore(a)}\n        )\n\n        return (\n            <div>\n                <ul>\n                    {\n                        sortedQuestions.map(\n                            (question) => (<li key={question.id}><Question questionId={question.id} score={questionScore(question)}/></li>)\n                        )\n                    }\n                </ul>\n\n\n            </div>\n\n        )\n    }\n\n}\n\nconst mapStateToProps = ({questions, users}) => {\n    return {\n        questions,\n        users\n    }\n}\n\n\n\nexport default connect(mapStateToProps)(Leaderboard)"]},"metadata":{},"sourceType":"module"}