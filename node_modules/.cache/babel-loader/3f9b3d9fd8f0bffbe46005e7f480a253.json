{"ast":null,"code":"var _jsxFileName = \"/Users/robinjack/Documents/Repositories/react-nanodegree/reactnd-would-you-rather/src/components/QuestionPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Question from \"./Question\";\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuestionPage extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Would you rather?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), this.props.questionExists ? /*#__PURE__*/_jsxDEV(Question, {\n        questionId: this.props.match.params.questionId,\n        showVotes: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: '/404'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  users,\n  questions,\n  authedUser\n}, {\n  questionId\n}) => {\n  return {\n    user: users,\n    questionId,\n    questionExists: questions[questionId]\n  };\n};\n\nexport default connect(mapStateToProps)(QuestionPage);","map":{"version":3,"sources":["/Users/robinjack/Documents/Repositories/react-nanodegree/reactnd-would-you-rather/src/components/QuestionPage.js"],"names":["React","Component","connect","Question","Redirect","QuestionPage","render","props","questionExists","match","params","questionId","mapStateToProps","users","questions","authedUser","user"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;;AAGA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAIjCK,EAAAA,MAAM,GAAG;AACL,wBAAQ;AAAA,8BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,EAEF,KAAKC,KAAL,CAAWC,cAAX,gBACG,QAAC,QAAD;AAAU,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,UAA9C;AACS,QAAA,SAAS,EAAE;AADpB;AAAA;AAAA;AAAA;AAAA,cADH,gBAGQ,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cALN;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAiBH;;AAtBgC;;AA2BrC,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA;AAAnB,CAAD,EAAiC;AAACJ,EAAAA;AAAD,CAAjC,KAAkD;AACtE,SAAO;AACHK,IAAAA,IAAI,EAAGH,KADJ;AAEHF,IAAAA,UAFG;AAGHH,IAAAA,cAAc,EAAEM,SAAS,CAACH,UAAD;AAHtB,GAAP;AAKH,CAND;;AASA,eAAeT,OAAO,CAACU,eAAD,CAAP,CAAyBP,YAAzB,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport Question from \"./Question\";\nimport {Redirect} from 'react-router-dom'\n\n\nclass QuestionPage extends Component {\n\n\n\n    render() {\n        return (<div>\n            <h3>Would you rather?</h3>\n            { this.props.questionExists?\n                (<Question questionId={this.props.match.params.questionId}\n                          showVotes={true}\n                />) : <Redirect to={'/404'}/>\n            }\n            {/*\n            1. Text of option, number of people who voted\n            , percentage of people who voted for that option\n            2. Text should be clearly marked if the user voted for that option\n            3.\n\n            */}\n\n\n        </div>)\n    }\n\n}\n\n\nconst mapStateToProps = ({users, questions, authedUser}, {questionId}) => {\n    return {\n        user : users,\n        questionId,\n        questionExists: questions[questionId]\n    }\n}\n\n\nexport default connect(mapStateToProps)(QuestionPage)\n\n"]},"metadata":{},"sourceType":"module"}