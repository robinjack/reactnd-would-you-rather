{"ast":null,"code":"var _jsxFileName = \"/Users/robinjack/Documents/Repositories/react-nanodegree/reactnd-would-you-rather/src/components/Question.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport authedUser from \"../reducers/authedUser\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Question extends Component {\n  render() {\n    const {\n      user,\n      question\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/question/${question.id}`,\n      className: 'question',\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: 'avatar',\n        src: user.avatarURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          'fontWeight': this.props.authedUser === user.id ? 'bold' : 'normal'\n        },\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'question-icons',\n        children: !this.props.showVotes ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'btn',\n            children: [\" \", question.optionOne.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 47\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'btn',\n            children: [\" \", question.optionTwo.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 21\n          }, this), \" \", !this.props.score ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'score',\n            children: [\" \", this.props.score, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 42\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'btn',\n            children: [\" \", question.optionOne.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'btn',\n            children: [\" \", question.optionTwo.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  users,\n  questions,\n  authedUser\n}, {\n  questionId,\n  score,\n  showVotes\n}) => {\n  return {\n    question: questions[questionId],\n    user: users[questions[questionId].author],\n    ...authedUser,\n    score,\n    showVotes\n  };\n};\n\nexport default connect(mapStateToProps)(Question);","map":{"version":3,"sources":["/Users/robinjack/Documents/Repositories/react-nanodegree/reactnd-would-you-rather/src/components/Question.js"],"names":["React","Component","connect","authedUser","Link","Question","render","user","question","props","id","avatarURL","name","showVotes","optionOne","text","optionTwo","score","mapStateToProps","users","questions","questionId","author"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAIA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAE7BK,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAmB,KAAKC,KAA9B;AACA,wBAAQ,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,aAAYD,QAAQ,CAACE,EAAG,EAAnC;AAAsC,MAAA,SAAS,EAAE,UAAjD;AAAA,8BACJ;AAAK,QAAA,SAAS,EAAE,QAAhB;AAA0B,QAAA,GAAG,EAAEH,IAAI,CAACI;AAApC;AAAA;AAAA;AAAA;AAAA,cADI,eAEJ;AAAG,QAAA,KAAK,EAAE;AAAC,wBAAe,KAAKF,KAAL,CAAWN,UAAX,KAA0BI,IAAI,CAACG,EAA/B,GAAoC,MAApC,GAA6C;AAA7D,SAAV;AAAA,kBAAmFH,IAAI,CAACK;AAAxF;AAAA;AAAA;AAAA;AAAA,cAFI,eAGJ;AAAK,QAAA,SAAS,EAAE,gBAAhB;AAAA,kBACK,CAAC,KAAKH,KAAL,CAAWI,SAAZ,gBAAwB;AAAA,kCAAK;AAAK,YAAA,SAAS,EAAE,KAAhB;AAAA,4BAAyBL,QAAQ,CAACM,SAAT,CAAmBC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAL,eACrB;AAAK,YAAA,SAAS,EAAE,KAAhB;AAAA,4BAAyBP,QAAQ,CAACQ,SAAT,CAAmBD,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,kBADqB,OACoC,CAAC,KAAKN,KAAL,CAAWQ,KAAZ,GAAoB,IAApB,gBACrD;AAAK,YAAA,SAAS,EAAE,OAAhB;AAAA,4BAA2B,KAAKR,KAAL,CAAWQ,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFiB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAxB,gBAMG;AAAA,kCAAK;AAAK,YAAA,SAAS,EAAE,KAAhB;AAAA,4BAAyBT,QAAQ,CAACM,SAAT,CAAmBC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAL,eACI;AAAK,YAAA,SAAS,EAAE,KAAhB;AAAA,4BAAyBP,QAAQ,CAACQ,SAAT,CAAmBD,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAPR;AAAA;AAAA;AAAA;AAAA,cAHI;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAqBH;;AAzB4B;;AA6BjC,MAAMG,eAAe,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,SAAR;AAAmBjB,EAAAA;AAAnB,CAAD,EAAiC;AAACkB,EAAAA,UAAD;AAAaJ,EAAAA,KAAb;AAAoBJ,EAAAA;AAApB,CAAjC,KAAoE;AACxF,SAAO;AACHL,IAAAA,QAAQ,EAAEY,SAAS,CAACC,UAAD,CADhB;AAEHd,IAAAA,IAAI,EAAEY,KAAK,CAACC,SAAS,CAACC,UAAD,CAAT,CAAsBC,MAAvB,CAFR;AAGH,OAAGnB,UAHA;AAIHc,IAAAA,KAJG;AAKHJ,IAAAA;AALG,GAAP;AAOH,CARD;;AAUA,eAAeX,OAAO,CAACgB,eAAD,CAAP,CAAyBb,QAAzB,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport authedUser from \"../reducers/authedUser\";\nimport {Link} from \"react-router-dom\";\n\n\n\nclass Question extends Component {\n\n    render() {\n        const {user, question} = this.props\n        return (<Link to={`/question/${question.id}`} className={'question'}>\n            <img className={'avatar'} src={user.avatarURL}/>\n            <p style={{'fontWeight' : this.props.authedUser === user.id ? 'bold' : 'normal'}}>{user.name}</p>\n            <div className={'question-icons'}>\n                {!this.props.showVotes? (<div><div className={'btn'}> {question.optionOne.text}</div>\n                    <div className={'btn'}> {question.optionTwo.text}</div> {!this.props.score ? null :\n                        <div className={'score'}> {this.props.score} </div>\n\n                    } </div> ) :\n\n                    <div><div className={'btn'}> {question.optionOne.text}</div>\n                        <div className={'btn'}> {question.optionTwo.text}</div>\n                    </div>\n\n\n                }\n\n\n\n            </div>\n        </Link>)\n    }\n\n}\n\nconst mapStateToProps = ({users, questions, authedUser}, {questionId, score, showVotes}) => {\n    return {\n        question: questions[questionId],\n        user: users[questions[questionId].author],\n        ...authedUser,\n        score,\n        showVotes\n    }\n}\n\nexport default connect(mapStateToProps)(Question)"]},"metadata":{},"sourceType":"module"}