{"ast":null,"code":"import { getInitialData } from '../utilities/api';\nimport { receiveUsers } from \"./users\";\nimport { receiveQuestions } from \"./questions\";\nimport { hideLoading, showLoading } from \"react-redux-loading-bar\";\nimport { setAuthedUser } from \"./authedUser\";\nexport const testAuthedUser = 'tylermcginnis';\nexport function handleInitialData() {\n  return dispatch => {\n    dispatch(showLoading());\n    return getInitialData().then(({\n      users,\n      questions\n    }) => {\n      dispatch(receiveUsers(users));\n      dispatch(receiveQuestions(questions));\n      dispatch(setAuthedUser(testAuthedUser));\n      dispatch(hideLoading());\n    });\n  };\n}","map":{"version":3,"sources":["/Users/robinjack/Documents/Repositories/react-nanodegree/reactnd-would-you-rather/src/actions/shared.js"],"names":["getInitialData","receiveUsers","receiveQuestions","hideLoading","showLoading","setAuthedUser","testAuthedUser","handleInitialData","dispatch","then","users","questions"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,kBAA7B;AACA,SAAQC,YAAR,QAA2B,SAA3B;AACA,SAAQC,gBAAR,QAA+B,aAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,yBAAvC;AACA,SAAQC,aAAR,QAA4B,cAA5B;AAEA,OAAO,MAAMC,cAAc,GAAG,eAAvB;AAEP,OAAO,SAASC,iBAAT,GAA6B;AAChC,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACJ,WAAW,EAAZ,CAAR;AACA,WAAOJ,cAAc,GAAGS,IAAjB,CAAsB,CAAC;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAD,KAAwB;AACjDH,MAAAA,QAAQ,CAACP,YAAY,CAACS,KAAD,CAAb,CAAR;AACAF,MAAAA,QAAQ,CAACN,gBAAgB,CAACS,SAAD,CAAjB,CAAR;AACAH,MAAAA,QAAQ,CAACH,aAAa,CAACC,cAAD,CAAd,CAAR;AACAE,MAAAA,QAAQ,CAACL,WAAW,EAAZ,CAAR;AACH,KALM,CAAP;AAUH,GAZD;AAcH","sourcesContent":["import {getInitialData} from '../utilities/api'\nimport {receiveUsers} from \"./users\";\nimport {receiveQuestions} from \"./questions\";\nimport {hideLoading, showLoading} from \"react-redux-loading-bar\";\nimport {setAuthedUser} from \"./authedUser\";\n\nexport const testAuthedUser = 'tylermcginnis'\n\nexport function handleInitialData() {\n    return (dispatch) => {\n        dispatch(showLoading())\n        return getInitialData().then(({users, questions}) => {\n            dispatch(receiveUsers(users))\n            dispatch(receiveQuestions(questions))\n            dispatch(setAuthedUser(testAuthedUser))\n            dispatch(hideLoading())\n        })\n\n\n\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}